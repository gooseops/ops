---
- name: Pause for apt-get lock
  become: true
  ansible.builtin.shell: "fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1 | echo $?"
  register: chk_aptget
  until: chk_aptget.stdout == "0"
  retries: 20
  delay: 5
  ignore_errors: true

- name: Ensure required dependencies are installed
  become: true
  ansible.builtin.apt:
    name:
      - curl
      - wget
      - build-essential
      - clang
      - pkg-config
      - libssl-dev
      - jq
      - git
      - tar
      - unzip
    state: present
    update_cache: true
  tags:
    - holesky
    - apt-packages

## Todo only run if Geth version changed
- name: Install Geth
  block:
    - name: Install Geth | Extract Geth binary
      become: true
      ansible.builtin.unarchive:
        remote_src: true
        src: "https://gethstore.blob.core.windows.net/builds/geth-linux-amd64-{{ geth_version }}.tar.gz"
        list_files: true
        dest: /tmp
      register: archive_files

    - name: Install Geth | Set Binary tmp path
      ansible.builtin.set_fact:
        binary: "{{ archive_files.files | select('match', '.*geth$') | first }}"

    - name: Install Geth | Copy binary to bin path
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: /tmp/{{ binary }}
        dest: "{{ bin_inst_path }}"
        mode: "0755"

## Todo only run if lighthouse version changed
- name: Download and extract Lighthouse Consensus Client
  become: true
  ansible.builtin.unarchive:
    remote_src: true
    src: "https://github.com/sigp/lighthouse/releases/download/{{ lighthouse_version }}/lighthouse-{{ lighthouse_version }}-x86_64-unknown-linux-gnu.tar.gz"
    dest: "{{ bin_inst_path }}"

- name: Add App bin path to PATH variable
  ansible.builtin.blockinfile:
    path: /home/{{ ansible_user }}/.bashrc
    block: |
      # Add app bin path to PATH variable
      export PATH=$PATH:/usr/local/bin
    marker: "# {mark} ANSIBLE MANAGED BIN PATH"

- name: Create data directory for Lighthouse
  become: true
  ansible.builtin.file:
    path: /var/lib/lighthouse
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Create data directory for Geth
  become: true
  ansible.builtin.file:
    path: /var/lib/geth
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Store jwt secret in Geth datadir
  become: true
  ansible.builtin.copy:
    content: "{{ holesky_jwt_secret }}"
    dest: /var/lib/geth/jwtsecret

- name: Create Lighthouse systemd service file
  become: true
  ansible.builtin.template:
    src: lighthouse-service.j2
    dest: /etc/systemd/system/lighthouse.service

- name: Create holesky systemd service file
  become: true
  ansible.builtin.template:
    src: holesky-service.j2
    dest: /etc/systemd/system/holesky.service

- name: Restart holesky
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
    name: holesky
    enabled: true
    state: restarted

# - name: Reload systemd and start Lighthouse
#   become: true
#   ansible.builtin.systemd:
#     daemon_reload: yes
#     name: lighthouse
#     enabled: yes
#     state: restarted
