server {
    listen 80;
    server_name {{ domain }};

    location / {

        proxy_pass http://127.0.0.1:{{ app_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        return 301 https://$host$request_uri;
    }

    # Allow ACME challenges for Let's Encrypt
    location /.well-known/acme-challenge/ {
        allow all;
    }
}

server {
    listen 443 ssl;
    server_name {{ domain }};

    {% if crt_type == "letsencrypt" %}
        ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    {% elif crt_type == "private" %}
        ssl_certificate /etc/nginx/tls/certs/{{ domain }}.crt;
        ssl_certificate_key /etc/nginx/tls/private/{{ domain }}.key;
    {% else %}
        # Fallback (should not happen in production)
        ssl_certificate /etc/nginx/tls/certs/{{ domain }}.crt;
        ssl_certificate_key /etc/nginx/tls/private/{{ domain }}.key;
    {% endif %}

    location / {

        proxy_pass http://127.0.0.1:{{ app_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

{% if reject_non_dns_traffic %}
# Default server block to reject traffic that does not match the desired domain
server {
    listen 443 ssl default_server;
    server_name _;

    {% if crt_type == "letsencrypt" %}
        ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    {% elif crt_type == "private" %}
        ssl_certificate /etc/ssl/certs/{{ domain }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ domain }}.key;
    {% endif %}

    return 444;
}
{% endif %}
