server {
    listen 80;
    server_name {{ domain }};

    location / {
        {% if enable_rate_limit %}
        limit_req zone=one burst=10 nodelay;
        {% endif %}

        proxy_pass http://127.0.0.1:{{ app_port }}; # Change this to the address of your application server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        return 301 https://$host$request_uri;
    }

    # Redirect all HTTP requests to HTTPS
    location /.well-known/acme-challenge/ {
        allow all;
    }
}

server {
    listen 443 ssl;
    server_name {{ domain }};

    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {

        {% if enable_rate_limit %}
        limit_req zone=one burst=10 nodelay;
        {% endif %}

        proxy_pass http://127.0.0.1:{{ app_port }}; # Change this to the address of your application server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

{% if reject_non_dns_traffic %}
# Default server block to reject traffic that does not match the desired domain
server {
    listen 443 ssl default_server;
    server_name _;  # Matches any domain name that doesn't have a specific server block

    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 444;  # Return an empty response (connection closed without sending any data)
}
{% endif %}
